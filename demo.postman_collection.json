{
	"info": {
		"_postman_id": "13d46dd7-325c-47fc-bcc3-7e4cb2ee3304",
		"name": "Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/scb-testing~bf0a9e3a-59e9-48d1-bfab-0952267c341a/collection/1453931-13d46dd7-325c-47fc-bcc3-7e4cb2ee3304?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "Login success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var request_name = pm.info.requestName;",
							"",
							"pm.test(request_name + \" :: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Define the JSON schema for the response body",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"accessToken\": { \"type\": \"string\" },",
							"        \"refreshToken\": { \"type\": \"string\" },",
							"        \"id\": { \"type\": \"number\" },",
							"        \"username\": { \"type\": \"string\" },",
							"        \"email\": { \"type\": \"string\", \"format\": \"email\" },",
							"        \"firstName\": { \"type\": \"string\" },",
							"        \"lastName\": { \"type\": \"string\" },",
							"        \"gender\": { \"type\": \"string\" },",
							"        \"image\": { \"type\": \"string\", \"format\": \"uri\" }",
							"    },",
							"    \"required\": [\"accessToken\", \"refreshToken\", \"id\", \"username\", \"email\", \"firstName\", \"lastName\", \"gender\", \"image\"]",
							"};",
							"",
							"// Perform the JSON schema validation",
							"pm.test(request_name + ' :: Response body matches the schema', function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(tv4.validate(responseBody, schema)).to.be.true;",
							"});",
							"",
							"// Test to check if id, username, and email match the expected values",
							"pm.test(request_name + ' :: Check id, username, and email', function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.id).to.equal(1);",
							"    pm.expect(responseBody.username).to.equal('emilys');",
							"    pm.expect(responseBody.email).to.equal('emily.johnson@x.dummyjson.com');",
							"});",
							"",
							"// Test to check if the JWT access token is present in the response body",
							"pm.test(request_name + ' :: Check JWT access token', function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.accessToken).to.match(/^[\\w-]+\\.[\\w-]+\\.[\\w-]+$/);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"emilys\",\n    \"password\": \"emilyspass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://dummyjson.com/auth/login"
			},
			"response": []
		}
	]
}